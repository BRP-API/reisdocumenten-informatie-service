name: continuous integration

on:
  push:
    paths:
      - src/**
      - features/**
      - .github/workflows/ci.yml
      - .docker/**
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:
    inputs:
      publishType:
        description: wat moet worden gereleased?
        required: true
        default: 'ci-only'
        type: choice
        options:
          - ci-only
          - app
          - mock

env:
  NODE_VERSION: '20'
  DOTNET_SOLUTION_FILE_PATH: src/Reisdocument.sln
  APP_PROJECT_PATH: ./src/ReisdocumentProxy
  APP_CSPROJ_FILE_PATH: ./src/ReisdocumentProxy/ReisdocumentProxy.csproj
  APP_CONTAINER_IMAGE: ghcr.io/brp-api/reisdocumenten-informatie-service
  MOCK_PROJECT_PATH: ./src/ReisdocumentService
  MOCK_CSPROJ_FILE_PATH: ./src/ReisdocumentService/ReisdocumentService.csproj
  MOCK_CONTAINER_IMAGE: ghcr.io/brp-api/reisdocumenten-service-mock
  SPEC_VERIFY_STEP_SUMMARY_FILE_PATH: ./test-reports/cucumber-js/reisdocumenten/step-summary.txt

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Genereer build run identifier
        id: build-run-id
        uses: ./.github/actions/genereer-build-run-identifier

      - name: Zet versie met build run in app csproj
        uses: ./.github/actions/zet-versie-met-build-run-in-csproj
        id: app-version
        with:
          path-csproj-file: ${{ env.APP_CSPROJ_FILE_PATH }}
          build-run: ${{ steps.build-run-id.outputs.build-run }}
      - name: Zet versie met build run in mock csproj
        uses: ./.github/actions/zet-versie-met-build-run-in-csproj
        id: mock-version
        with:
          path-csproj-file: ${{ env.MOCK_CSPROJ_FILE_PATH }}
          build-run: ${{ steps.build-run-id.outputs.build-run }}

      - name: Bepaal de gewijzigde applicatie(s) met dorny/paths-filter@v3.0.2
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changed-project
        with:
          filters: |
            app:
              - '${{ env.APP_PROJECT_PATH }}/**'
            mock:
              - '${{ env.MOCK_PROJECT_PATH }}/**'

      - name: Valideer .NET solution
        uses: ./.github/actions/valideer-dotnet-solution
        with:
          path-solution-file: ${{ env.DOTNET_SOLUTION_FILE_PATH }} 

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci

      - name: Zet run permissions op script folder
        uses: ./.github/actions/zet-run-bash-scripts-permission
        with:
          path-bash-file-or-folder: ./scripts/*

      - name: Build container images
        run: |
          ./scripts/containers-build.sh

      - name: Start containers
        run: |
          ./scripts/containers-start.sh ci
      - name: Wait for DB restart
        run: sleep 5s
        shell: bash

      - name: Valideer functionele specs
        run: |
          ./scripts/specs-verify.sh

      - name: Stop containers
        if: always()
        run: |
          ./scripts/containers-stop.sh ci

      - name: Voeg test summary toe aan Github Step Summary
        if: always()
        run: |
          node ./scripts/generate-step-summary.js
          echo "### Cucumber Test Reports" >> $GITHUB_STEP_SUMMARY
          cat ${{ env.SPEC_VERIFY_STEP_SUMMARY_FILE_PATH }} >> $GITHUB_STEP_SUMMARY
      - name: Login to GitHub Container Registry
        if: always()
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configureer container image builder voor multi-platform
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver: docker-container
      - name: Build & push app container images naar registry
        if: always() && (steps.changed-project.outputs.app == 'true' || inputs.publishType == 'app')
        uses: docker/build-push-action@v6
        with:
          file: ${{ env.APP_PROJECT_PATH }}/Dockerfile
          context: src
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.APP_CONTAINER_IMAGE }}:latest
            ${{ env.APP_CONTAINER_IMAGE }}:${{ steps.app-version.outputs.version }}-latest
            ${{ env.APP_CONTAINER_IMAGE }}:${{ steps.app-version.outputs.version }}-${{ steps.build-run-id.outputs.build-run }}
      - name: Build & push mock container images naar registry
        if: always() && (steps.changed-project.outputs.mock == 'true' || inputs.publishType == 'mock')
        uses: docker/build-push-action@v6
        with:
          file: ${{ env.MOCK_PROJECT_PATH }}/Dockerfile
          context: src
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.MOCK_CONTAINER_IMAGE }}:latest
            ${{ env.MOCK_CONTAINER_IMAGE }}:${{ steps.mock-version.outputs.version }}-latest
            ${{ env.MOCK_CONTAINER_IMAGE }}:${{ steps.mock-version.outputs.version }}-${{ steps.build-run-id.outputs.build-run }}
